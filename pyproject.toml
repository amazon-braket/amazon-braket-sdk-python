[tool.black]
line-length = 100

[tool.ruff]
# 3.10 introduces standards such as PEP604 which changes lots of typing
target-version = "py39"
line-length = 100
select = [
  "ANN", # flake8-annotations
  "ARG", # flake8-unused-arguments
  "B", # flake8-bugbear
  "C", # comprehensions, commas
  "D", # pydocstyle
  "DTZ", # flake8-datetimez
  "E", # Error
  "F", # Pyflakes
  "I", # isort
  "ICN", # flake8-import-conventions
  "ISC", # flake8-implicit-str-concat
  "N", # pep8-naming
  "PLC", # Pylint
  "PLE", # Pylint
  "PLR", # Pylint
  "PLW", # Pylint
  "Q", # flake8-quotes
  "RUF", # Ruff-specific rules
  "S", # flake8-bandit
  "T", # flake8-debugger
  "TID", # flake8-tidy-imports
  "UP", # pyupgrade
  "W", # Warning 
  "YTT", # flake8-2020
]
unfixable = [
  # Don't touch unused imports
  "F401",
]
ignore = [
  # Checking the type for self, special methods is not needed
  # Allow dynamic typing
  "ANN101", "ANN102", "ANN202", "ANN204", "ANN401",
  # Probably want to look into this later on
  "B026", "B904", "B019", "B008",
  # Docstrings are all written within classes and modules
  # No needed docstrings for classes/magic methods.
  # No summary lines
  "D100", "D101", "D102", "D104", "D105", "D107", "D205", "D415",
  # Python 3.10 and later rule
  "UP007",
  # Magic vars. Should be enabled later.
  "PLR2004",
  # Ignore complexity
  "PLR0911", "PLR0912", "PLR0913", "PLW1510",
  # Uppercase function names are fine in some cases
  "N801", "N802", "N803", "N806", "N815",
  # Allow Optional return types
  "RUF013",
  # Use of pickle is known
  "S301",
  # Subprocesses are acceptable in their current state
  "S603", "S607",
  # Could cause formatting issues. Explicit concat is fine.
  "ISC001", "ISC003",
  # TO DO fixes
  # Temporarily removing type annotation for kwargs, args, unused args
  "ANN002", "ANN003", "ARG002", "ARG001", "T201",
  # Doc fixes todo
  "D301",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.isort]
known-first-party = ["amazon_braket_sdk"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.pydoclint]
style = 'google'
exclude = '\.git|\.tox|tests'
allow-init-docstring = true
require-return-section-when-returning-nothing = false
baseline = "pydoclint-baseline.txt"


