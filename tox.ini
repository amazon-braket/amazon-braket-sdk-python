[tox]
envlist = clean,linters,docs,unit-tests

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:unit-tests]
usedevelop=True
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
deps =
    {[test-deps]deps}
commands =
    pytest {posargs} --cov=braket --cov-report term-missing --cov-report html --cov-report xml --cov-append
extras = test

[testenv:integ-tests]
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
deps =
    {[test-deps]deps}
passenv =
    AWS_PROFILE
    BRAKET_ENDPOINT
commands =
    pytest test/integ_tests {posargs}
extras = test

[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:ruff]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:black]commands}
    {[testenv:ruff]commands}

# Read only linter env
[testenv:linters_check]
basepython = python3
skip_install = true
deps =
    {[testenv:isort_check]deps}
    {[testenv:black_check]deps}
    {[testenv:ruff]deps}
commands =
    {[testenv:isort_check]commands}
    {[testenv:black_check]commands}
    {[testenv:ruff]commands}

[testenv:ruff]
basepython = python3
skip_install = true
deps =
    ruff
    pydoclint
commands =
    pydoclint src --style=google --allow-init-docstring true -q {posargs}
    ruff check src {posargs}

[testenv:isort]
basepython = python3
skip_install = true
deps =
    isort
commands =
    isort . {posargs}

[testenv:isort_check]
basepython = python3
skip_install = true
deps =
    isort
commands =
    isort . -c {posargs}

[testenv:black]
basepython = python3
skip_install = true
deps =
    black
commands =
    black ./ {posargs}

[testenv:black_check]
basepython = python3
skip_install = true
deps =
    black
commands =
    black --check ./ {posargs}

[testenv:docs]
basepython = python3
deps =
    {[test-deps]deps}
    sphinx
    sphinx-rtd-theme
    sphinxcontrib-apidoc
commands =
    sphinx-build -E -T -b html doc build/documentation/html

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = build/documentation/html
commands =
    python -m http.server {posargs}

[testenv:zip-build]
basepython = python3
skip_install = true
commands =
    /bin/sh -c 'tar -czvf build_files.tar.gz build/'

[test-deps]
deps =
    # If you need to test on a certain branch, add @<branch-name> after .git
    git+https://github.com/amazon-braket/amazon-braket-schemas-python.git
    git+https://github.com/amazon-braket/amazon-braket-default-simulator-python.git
