[tox]
envlist = clean,linters,docs,unit-tests,notebooks

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:unit-tests]
usedevelop=True
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
deps =
    {[test-deps]deps}
commands =
    pytest {posargs} --cov=braket --cov-report term-missing --cov-report html --cov-report xml --cov-append
extras = test

[testenv:integ-tests]
basepython = python3
# {posargs} contains additional arguments specified when invoking tox. e.g. tox -- -s -k test_foo.py
deps =
    {[test-deps]deps}
passenv =
    AWS_PROFILE
    BRAKET_ENDPOINT
commands =
    pytest test/integ_tests {posargs}
extras = test

[testenv:notebooks]
# NOTE: Do not merge this part to main. The AutoQASM example notebooks should be moved
# to the example notebooks repo rather than living in the Braket SDK repo.
usedevelop=True
basepython = python3
deps =
    {[testenv:unit-tests]deps}
    notebook
    matplotlib
commands =
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/autoqasm/1_Getting_started_with_AutoQASM.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/autoqasm/2_Expressing_classical_control_flow.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/autoqasm/3_Iterative_phase_estimation.ipynb
    jupyter nbconvert --to html --execute --ExecutePreprocessor.kernel_name=python3 ./examples/autoqasm/4_Native_programming.ipynb
extras = test

[testenv:linters]
basepython = python3
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:black]deps}
    {[testenv:flake8]deps}
commands =
    # isort MUST come before black as it will revert any changes made by black
    {[testenv:isort]commands}
    {[testenv:black]commands}
    {[testenv:flake8]commands}

[testenv:flake8]
basepython = python3
skip_install = true
deps =
    flake8
    flake8-rst-docstrings
    git+https://github.com/aws/amazon-braket-build-tools.git
commands =
    flake8 {posargs}
    flake8 --enable-extensions=BCS src

[testenv:isort]
basepython = python3
skip_install = true
deps =
    isort
commands =
    isort . {posargs}

[testenv:black]
basepython = python3
skip_install = true
deps =
    black
commands =
    black ./ --extend-exclude=src/braket/experimental/autoqasm/autograph {posargs}

[testenv:docs]
basepython = python3
deps =
    {[test-deps]deps}
    sphinx
    sphinx-rtd-theme
    sphinxcontrib-apidoc
commands =
    sphinx-build -E -T -b html doc build/documentation/html

[testenv:serve-docs]
basepython = python3
skip_install = true
changedir = build/documentation/html
commands =
    python -m http.server {posargs}

[testenv:zip-build]
basepython = python3
skip_install = true
commands =
    /bin/sh -c 'tar -czvf build_files.tar.gz build/'

[test-deps]
deps =
    # If you need to test on a certain branch, add @<branch-name> after .git
    git+https://github.com/aws/amazon-braket-schemas-python.git
    git+https://github.com/aws/amazon-braket-default-simulator-python.git@800a31a0860de5ec09532a3dbc127059d03cf9ac  # mcm-sim branch
