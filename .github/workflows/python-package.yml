# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

env:
  RUNNER_TOOL_CACHE: D:\hostedtoolcache
  RUNNER_TEMP: D:\Temp
  GITHUB_WORKSPACE: D:\a\${{ github.event.repository.name }}\${{ github.event.repository.name }}
  SystemDrive: 'D:'
  HOMEDRIVE: 'D:'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feature/**

permissions:
  contents: read

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Set Python tool cache for Windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: |
        New-Item -Path "D:\hostedtoolcache" -ItemType Directory -Force
        New-Item -Path "D:\Temp" -ItemType Directory -Force
        New-Item -Path "D:\a\${{ github.event.repository.name }}\${{ github.event.repository.name }}" -ItemType Directory -Force

        echo "GITHUB_WORKSPACE=D:\a\${{ github.event.repository.name }}\${{ github.event.repository.name }}" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "RUNNER_TOOL_CACHE=D:\hostedtoolcache" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "RUNNER_TEMP=D:\Temp" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "SystemDrive=D:" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "HOMEDRIVE=D:" | Out-File -FilePath $env:GITHUB_ENV -Append
        
        echo "pythonLocation=D:\hostedtoolcache\Python\${{ matrix.python-version }}\x64" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "PKG_CONFIG_PATH=D:\hostedtoolcache\Python\${{ matrix.python-version }}\x64\lib\pkgconfig" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "Python_ROOT_DIR=D:\hostedtoolcache\Python\${{ matrix.python-version }}\x64" | Out-File -FilePath $env:GITHUB_ENV -Append
        echo "Python3_ROOT_DIR=D:\hostedtoolcache\Python\${{ matrix.python-version }}\x64" | Out-File -FilePath $env:GITHUB_ENV -Append
    - name: Checkout repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        path: ${{ matrix.os == 'windows-latest' && format('D:\a\{0}\{0}', github.event.repository.name) || '.'}}
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        python-version: ${{ matrix.python-version }}
        cache-dependency-path: ${{ matrix.os == 'windows-latest' && format('D:\a\{0}\{0}/requirements.txt', github.event.repository.name) || './requirements.txt' }}
    - name: Install dependencies
      working-directory: ${{ matrix.os == 'windows-latest' && format('D:\a\{0}\{0}', github.event.repository.name) || '.' }}
      run: |
        pip install tox
    - name: Run unit tests
      working-directory: ${{ matrix.os == 'windows-latest' && format('D:\a\{0}\{0}', github.event.repository.name) || '.' }}
      run: |
        tox -e unit-tests
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
      if: ${{ strategy.job-index }} == 0
